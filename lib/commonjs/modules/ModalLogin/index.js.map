{"version":3,"sources":["index.tsx"],"names":["ModalLogin","permissionVisible","setPermissionVisible","permissionIsContinue","setPermissionIsContinue","setLoginVisible","Context","hideSelf","handleContinue","handleWillHide","styles","modal","container"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,SAASA,UAAT,GAAmC;AACjC,QAAM;AACJC,IAAAA,iBADI;AAEJC,IAAAA,oBAFI;AAGJC,IAAAA,oBAHI;AAIJC,IAAAA,uBAJI;AAKJC,IAAAA;AALI,MAMF,uBAAWC,gBAAX,CANJ;;AAQA,QAAMC,QAAQ,GAAG,MAAM;AACrBL,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD,GAFD;;AAIA,QAAMM,cAAc,GAAG,MAAM;AAC3BJ,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACAG,IAAAA,QAAQ;AACT,GAHD;;AAKA,QAAME,cAAc,GAAG,MAAM;AAC3B,QAAIN,oBAAJ,EAA0B;AACxBE,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF,GAJD;;AAMA,sBACE,6BAAC,yBAAD;AACE,IAAA,eAAe,EAAE,IADnB;AAEE,IAAA,KAAK,EAAEK,gBAAOC,KAFhB;AAGE,IAAA,SAAS,EAAEV,iBAHb;AAIE,IAAA,eAAe,EAAE,GAJnB;AAKE,IAAA,iBAAiB,EAAEM,QALrB;AAME,IAAA,eAAe,EAAEA,QANnB;AAOE,IAAA,WAAW,EAAEE;AAPf,kBAQE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,gBAAOE;AAApB,kBACE,6BAAC,aAAD,OADF,eAEE,6BAAC,eAAD;AAAQ,IAAA,OAAO,EAAEJ;AAAjB,IAFF,eAGE,6BAAC,uBAAD,OAHF,CARF,CADF;AAgBD;;eAEcR,U","sourcesContent":["import React, {useContext} from 'react';\nimport {View} from 'react-native';\nimport Modal from 'react-native-modal';\nimport Button from './Button';\nimport TermsOfService from './TermsOfService';\nimport styles from './styles';\nimport Logo from './Logo';\nimport {Context} from '../../core/Context';\n\nfunction ModalLogin(): JSX.Element {\n  const {\n    permissionVisible,\n    setPermissionVisible,\n    permissionIsContinue,\n    setPermissionIsContinue,\n    setLoginVisible\n  } = useContext(Context);\n\n  const hideSelf = () => {\n    setPermissionVisible(false);\n  };\n\n  const handleContinue = () => {\n    setPermissionIsContinue(true);\n    hideSelf();\n  };\n\n  const handleWillHide = () => {\n    if (permissionIsContinue) {\n      setLoginVisible(true);\n    }\n  };\n\n  return (\n    <Modal\n      useNativeDriver={true}\n      style={styles.modal}\n      isVisible={permissionVisible}\n      backdropOpacity={0.3}\n      onBackButtonPress={hideSelf}\n      onBackdropPress={hideSelf}\n      onModalHide={handleWillHide}>\n      <View style={styles.container}>\n        <Logo />\n        <Button onPress={handleContinue} />\n        <TermsOfService />\n      </View>\n    </Modal>\n  );\n}\n\nexport default ModalLogin;\n"]}