{"version":3,"sources":["index.tsx"],"names":["Login","loginVisible","setLoginVisible","clearState","resetReducer","Context","hideSelf","handleOnCancel","EventRegister","emitEvent","ON_CANCEL","colors","primary","styles","modal","container","content","btnCancel"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,SAASA,KAAT,GAA8B;AAC5B,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA;AAJI,MAKF,uBAAWC,gBAAX,CALJ;;AAOA,QAAMC,QAAQ,GAAG,MAAM;AACrBJ,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFD;;AAIA,QAAMK,cAAc,GAAG,MAAM;AAC3BC,gCAAcC,SAAd,CAAwBC,uBAAxB,EAAmC,IAAnC;;AACAN,IAAAA,YAAY;AACZD,IAAAA,UAAU;AACX,GAJD;;AAMA,sBACE,yEACE,6BAAC,yBAAD;AACE,IAAA,eAAe,EAAE,IADnB;AAEE,IAAA,iBAAiB,EAAE,GAFrB;AAGE,IAAA,YAAY,EAAC,SAHf;AAIE,IAAA,kBAAkB,EAAE,GAJtB;AAKE,IAAA,SAAS,EAAEF,YALb;AAME,IAAA,iBAAiB,EAAEK,QANrB;AAOE,IAAA,eAAe,EAAE,CAPnB;AAQE,IAAA,aAAa,EAAEK,eAAOC,OARxB;AASE,IAAA,KAAK,EAAEC,gBAAOC,KAThB;AAUE,IAAA,WAAW,EAAE;AAVf,kBAWE,6BAAC,uBAAD;AAAY,IAAA,4BAA4B,EAAE;AAA1C,kBACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAED,gBAAOE;AAApB,kBACE,6BAAC,qBAAD,OADF,eAEE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEF,gBAAOG;AAApB,kBACE,6BAAC,oBAAD,OADF,eAEE,6BAAC,aAAD,OAFF,eAGE,6BAAC,yBAAD,OAHF,eAIE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEH,gBAAOI,SAApB;AAA+B,IAAA,OAAO,EAAEV;AAAxC,cAJF,CAFF,CADF,CAXF,eAwBE,6BAAC,YAAD,OAxBF,CADF,CADF;AA8BD;;eAEcP,K","sourcesContent":["import React, {useContext} from 'react';\nimport {View, Text, ScrollView} from 'react-native';\nimport Modal from 'react-native-modal';\nimport OTP from '../OTP';\nimport Illustration from './Illustration';\nimport Description from './Description';\nimport TermsDescription from './TermsDescription';\nimport styles from './styles';\nimport {colors} from '../../themes';\nimport Form from './Form';\nimport {Context} from '../../core/Context';\nimport {EventRegister, ON_CANCEL} from '../../core/eventManager';\n\nfunction Login(): JSX.Element {\n  const {\n    loginVisible,\n    setLoginVisible,\n    clearState,\n    resetReducer\n  } = useContext(Context);\n\n  const hideSelf = () => {\n    setLoginVisible(false);\n  };\n\n  const handleOnCancel = () => {\n    EventRegister.emitEvent(ON_CANCEL, true);\n    resetReducer();\n    clearState();\n  };\n\n  return (\n    <>\n      <Modal\n        useNativeDriver={true}\n        animationInTiming={500}\n        animationOut=\"fadeOut\"\n        animationOutTiming={500}\n        isVisible={loginVisible}\n        onBackButtonPress={hideSelf}\n        backdropOpacity={1}\n        backdropColor={colors.primary}\n        style={styles.modal}\n        coverScreen={true}>\n        <ScrollView showsVerticalScrollIndicator={false}>\n          <View style={styles.container}>\n            <Illustration />\n            <View style={styles.content}>\n              <Description />\n              <Form />\n              <TermsDescription />\n              <Text style={styles.btnCancel} onPress={handleOnCancel}>\n                Cancel\n              </Text>\n            </View>\n          </View>\n        </ScrollView>\n        <OTP />\n      </Modal>\n    </>\n  );\n}\n\nexport default Login;\n"]}