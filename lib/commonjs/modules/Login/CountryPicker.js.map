{"version":3,"sources":["CountryPicker.tsx"],"names":["countries","require","arrCountry","Object","keys","map","key","CountryPicker","props","onSelected","countryCode","Context","visible","setVisible","React","useState","toggleModal","handleOnSelected","item","keyExtractor","iso2","renderItem","imageSource","flags","styles","itemFlag","iconFlag","countryText","name","countryCodeText","dialCode","containerInputCountryCode","placeholderCountryCode","images","arrowDown","containerModal","FlatListSeparator","btnCancelCountryPicker"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\nimport {View, Text, Image, TouchableOpacity, FlatList} from 'react-native';\nimport Modal from 'react-native-modal';\nimport {flags, images} from '../../themes';\nimport {\n  Countries,\n  Country,\n  CountryPickerProps,\n  FlagType\n} from './Login.interface';\nimport styles from './styles';\nimport {Context} from '../../core/Context';\nimport FlatListSeparator from './FlatListSeparator';\nimport {getDialCode} from '../../helpers';\n\nconst countries: Countries = require('../../../assets/json/countries.json');\n\nconst arrCountry = Object.keys(countries).map((key) => {\n  return countries[key as FlagType];\n});\n\nfunction CountryPicker(props: CountryPickerProps) {\n  const {onSelected} = props;\n\n  const {countryCode} = useContext(Context);\n  const [visible, setVisible] = React.useState(false);\n\n  const toggleModal = () => {\n    setVisible(!visible);\n  };\n\n  const handleOnSelected = (item: Country) => {\n    toggleModal();\n    onSelected(item);\n  };\n\n  const keyExtractor = (item: Country) => item.iso2;\n\n  const renderItem = ({item}: {item: Country}) => {\n    const imageSource = flags[item.iso2];\n\n    return (\n      <TouchableOpacity\n        activeOpacity={0.3}\n        onPress={() => handleOnSelected(item)}>\n        <View style={styles.itemFlag}>\n          <Image\n            source={imageSource}\n            style={styles.iconFlag}\n            resizeMode=\"contain\"\n          />\n          <Text style={styles.countryText}>{item.name}</Text>\n          <Text style={styles.countryCodeText}>{`+${item.dialCode}`}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <>\n      <TouchableOpacity activeOpacity={0.3} onPress={toggleModal}>\n        <View style={styles.containerInputCountryCode}>\n          <Image\n            source={flags[countryCode]}\n            resizeMode=\"contain\"\n            style={styles.iconFlag}\n          />\n          <Text style={styles.placeholderCountryCode}>\n            {`+${getDialCode(countryCode)}`}\n          </Text>\n          <Image source={images.arrowDown} style={styles.arrowDown} />\n        </View>\n      </TouchableOpacity>\n      {visible && (\n        <Modal\n          useNativeDriver={true}\n          isVisible={visible}\n          backdropOpacity={0.5}>\n          <View>\n            <View style={styles.containerModal}>\n              <FlatList\n                keyExtractor={keyExtractor}\n                data={arrCountry}\n                renderItem={renderItem}\n                scrollEnabled={true}\n                showsVerticalScrollIndicator={false}\n                maxToRenderPerBatch={15}\n                ItemSeparatorComponent={FlatListSeparator}\n              />\n            </View>\n            <View>\n              <TouchableOpacity activeOpacity={0.3} onPress={toggleModal}>\n                <Text style={styles.btnCancelCountryPicker}>Cancel</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </Modal>\n      )}\n    </>\n  );\n}\n\nexport default CountryPicker;\n"]}