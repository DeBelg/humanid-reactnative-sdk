{"version":3,"sources":["Form.tsx"],"names":["Form","state","loginRequest","loginOTPRequest","phoneNumber","countryCode","clearState","resetReducer","Context","otpRef","timerRef","timer","setTimer","loginOTPPayload","data","config","nextResendDelay","clearTimer","clearTimeout","current","countdown","setTimeout","loginPayload","success","exchangeToken","EventRegister","emitEvent","ON_SUCCESS","bringUpKeyBoardIfNeeded","handleOnCodeFilled","code","phone","verificationCode","deviceId","handleResendCode","styles","formContainer","otpView","otpFieldStyle","otpHighlightStyle","loginFetching","loginOTPFetching","colors","gray","resendCode"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useRef, useState} from 'react';\nimport OTPInputView from './OTPInput';\nimport {View, Text, ActivityIndicator} from 'react-native';\nimport styles from './styles';\nimport {Context} from '../../core/Context';\nimport {getDialCode} from '../../helpers';\nimport {getUniqueId} from 'react-native-device-info';\nimport {EventRegister, ON_SUCCESS} from '../../core/eventManager';\nimport {colors} from '../../themes';\n\nfunction Form(): JSX.Element {\n  const {\n    state,\n    loginRequest,\n    loginOTPRequest,\n    phoneNumber,\n    countryCode,\n    clearState,\n    resetReducer\n  } = useContext(Context);\n\n  const otpRef = useRef<OTPInputView>(null);\n\n  const timerRef = useRef<NodeJS.Timeout>();\n\n  const [timer, setTimer] = useState(\n    state.loginOTPPayload?.data?.config?.nextResendDelay ?? 60\n  );\n\n  const clearTimer = () => clearTimeout(timerRef.current!);\n\n  useEffect(() => {\n    return () => clearTimer();\n  }, []);\n\n  useEffect(() => {\n    if (timer === 0) {\n      return;\n    }\n\n    function countdown() {\n      setTimer(timer - 1);\n    }\n\n    timerRef.current = setTimeout(countdown, 1000);\n\n    return () => clearTimer();\n  }, [timer]);\n\n  useEffect(() => {\n    if (timer === 0) {\n      setTimer(state.loginOTPPayload?.data?.config?.nextResendDelay ?? 60);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.loginOTPPayload]);\n\n  useEffect(() => {\n    if (state.loginPayload?.success) {\n      const {exchangeToken} = state.loginPayload.data;\n      EventRegister.emitEvent(ON_SUCCESS, exchangeToken);\n      clearState();\n      resetReducer();\n    } else if (!state.loginPayload?.success) {\n      setTimeout(() => {\n        otpRef.current?.bringUpKeyBoardIfNeeded();\n      }, 500);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.loginPayload]);\n\n  const handleOnCodeFilled = (code: string) => {\n    loginRequest({\n      phone: phoneNumber,\n      countryCode: getDialCode(countryCode),\n      verificationCode: code,\n      deviceId: getUniqueId()\n    });\n  };\n\n  const handleResendCode = () => {\n    loginOTPRequest({\n      phone: phoneNumber,\n      countryCode: getDialCode(countryCode)\n    });\n  };\n\n  return (\n    <View style={styles.formContainer}>\n      <OTPInputView\n        ref={otpRef}\n        pinCount={4}\n        style={styles.otpView}\n        codeInputFieldStyle={styles.otpFieldStyle}\n        codeInputHighlightStyle={styles.otpHighlightStyle}\n        keyboardType=\"phone-pad\"\n        autoFocusOnLoad={true}\n        onCodeFilled={handleOnCodeFilled}\n        editable={!state.loginFetching}\n      />\n      {state.loginOTPFetching ? (\n        <ActivityIndicator size=\"small\" color={colors.gray} />\n      ) : (\n        <Text\n          style={styles.resendCode}\n          onPress={timer === 0 ? handleResendCode : () => null}>\n          {timer !== 0\n            ? `Resend code in ${timer}`\n            : 'Click here to resend code'}\n        </Text>\n      )}\n    </View>\n  );\n}\n\nexport default Form;\n"]}