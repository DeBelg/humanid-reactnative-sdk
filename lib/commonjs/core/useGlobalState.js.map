{"version":3,"sources":["useGlobalState.ts"],"names":["useGlobalState","phoneNumber","handlePhoneNumber","React","useState","countryCode","handleCountryCode","loginVisible","handleLoginVisible","loginOTPVisible","handleLoginOTPVisible","webLoginModalVisible","handleWebLoginVisible","webLoginUrl","setWebLoginUrl","clearState","setTimeout","setPhoneNumber","number","setCountryCode","country","setLoginVisible","visible","setLoginOTPVisible","setWebLoginModalVisible","setWebLoginUrlToView","url"],"mappings":";;;;;;;AACA;;;;AADA;AAKA,SAASA,cAAT,GAA0C;AACxC,QAAM,CAACC,WAAD,EAAcC,iBAAd,IAAmCC,eAAMC,QAAN,CAAe,EAAf,CAAzC;;AACA,QAAM,CAACC,WAAD,EAAcC,iBAAd,IAAmCH,eAAMC,QAAN,CAAyB,IAAzB,CAAzC;;AACA,QAAM,CAACG,YAAD,EAAeC,kBAAf,IAAqCL,eAAMC,QAAN,CAAe,KAAf,CAA3C;;AACA,QAAM,CAACK,eAAD,EAAkBC,qBAAlB,IAA2CP,eAAMC,QAAN,CAAe,KAAf,CAAjD;;AACA,QAAM,CAACO,oBAAD,EAAuBC,qBAAvB,IAAgDT,eAAMC,QAAN,CAAe,KAAf,CAAtD;;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCX,eAAMC,QAAN,CAAe,EAAf,CAAtC;;AAEA,QAAMW,UAAU,GAAG,MAAM;AACvBC,IAAAA,UAAU,CAAC,MAAM;AACfR,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAN,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAU,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAE,MAAAA,cAAc,CAAC,EAAD,CAAd;AACAF,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAE,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD,KAPS,EAOP,CAPO,CAAV;AASAE,IAAAA,UAAU,CAAC,MAAM;AACfV,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAI,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD,KAHS,EAGP,GAHO,CAAV;AAID,GAdD;;AAgBA,QAAMO,cAAc,GAAIC,MAAD,IAAoB;AACzChB,IAAAA,iBAAiB,CAACgB,MAAD,CAAjB;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAIC,OAAD,IAAuB;AAC5Cd,IAAAA,iBAAiB,CAACc,OAAD,CAAjB;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAIC,OAAD,IAAsB;AAC5Cd,IAAAA,kBAAkB,CAACc,OAAD,CAAlB;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAID,OAAD,IAAsB;AAC/CZ,IAAAA,qBAAqB,CAACY,OAAD,CAArB;AACD,GAFD;;AAIA,QAAME,uBAAuB,GAAIF,OAAD,IAAsB;AACpDV,IAAAA,qBAAqB,CAACU,OAAD,CAArB;AACD,GAFD;;AAIA,QAAMG,oBAAoB,GAAIC,GAAD,IAAiB;AAC5CZ,IAAAA,cAAc,CAACY,GAAD,CAAd;AACD,GAFD;;AAIA,SAAO;AACLzB,IAAAA,WADK;AAELgB,IAAAA,cAFK;AAGLZ,IAAAA,WAHK;AAILc,IAAAA,cAJK;AAKLZ,IAAAA,YALK;AAMLc,IAAAA,eANK;AAOLZ,IAAAA,eAPK;AAQLc,IAAAA,kBARK;AASLZ,IAAAA,oBATK;AAULa,IAAAA,uBAVK;AAWLX,IAAAA,WAXK;AAYLY,IAAAA,oBAZK;AAaLV,IAAAA;AAbK,GAAP;AAeD;;eAEcf,c","sourcesContent":["/* eslint-disable prettier/prettier */\nimport React from 'react';\nimport {UseGlobalState} from './core.interface';\nimport {FlagType} from '../modules/Login/Login.interface';\n\nfunction useGlobalState(): UseGlobalState {\n  const [phoneNumber, handlePhoneNumber] = React.useState('');\n  const [countryCode, handleCountryCode] = React.useState<FlagType>('us');\n  const [loginVisible, handleLoginVisible] = React.useState(false);\n  const [loginOTPVisible, handleLoginOTPVisible] = React.useState(false);\n  const [webLoginModalVisible, handleWebLoginVisible] = React.useState(false);\n  const [webLoginUrl, setWebLoginUrl] = React.useState('');\n\n  const clearState = () => {\n    setTimeout(() => {\n      handleLoginVisible(false);\n      handlePhoneNumber('');\n      handleWebLoginVisible(false);\n      setWebLoginUrl('');\n      handleWebLoginVisible(false)\n      setWebLoginUrl('')\n    }, 0);\n\n    setTimeout(() => {\n      handleCountryCode('us');\n      handleLoginOTPVisible(false);\n    }, 500);\n  };\n\n  const setPhoneNumber = (number: string) => {\n    handlePhoneNumber(number);\n  };\n\n  const setCountryCode = (country: FlagType) => {\n    handleCountryCode(country);\n  };\n\n  const setLoginVisible = (visible: boolean) => {\n    handleLoginVisible(visible);\n  };\n\n  const setLoginOTPVisible = (visible: boolean) => {\n    handleLoginOTPVisible(visible);\n  };\n\n  const setWebLoginModalVisible = (visible: boolean) => {\n    handleWebLoginVisible(visible);\n  };\n\n  const setWebLoginUrlToView = (url: string) => {\n    setWebLoginUrl(url);\n  };\n\n  return {\n    phoneNumber,\n    setPhoneNumber,\n    countryCode,\n    setCountryCode,\n    loginVisible,\n    setLoginVisible,\n    loginOTPVisible,\n    setLoginOTPVisible,\n    webLoginModalVisible,\n    setWebLoginModalVisible,\n    webLoginUrl,\n    setWebLoginUrlToView,\n    clearState,\n  };\n}\n\nexport default useGlobalState;\n"]}