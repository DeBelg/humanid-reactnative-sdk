{"version":3,"sources":["index.tsx"],"names":["React","useContext","View","Modal","Button","TermsOfService","styles","Logo","Context","ModalLogin","permissionVisible","setPermissionVisible","permissionIsContinue","setPermissionIsContinue","setLoginVisible","hideSelf","handleContinue","handleWillHide","modal","container"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,IAAR,QAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;;AAEA,SAASC,UAAT,GAAmC;AACjC,QAAM;AACJC,IAAAA,iBADI;AAEJC,IAAAA,oBAFI;AAGJC,IAAAA,oBAHI;AAIJC,IAAAA,uBAJI;AAKJC,IAAAA;AALI,MAMFb,UAAU,CAACO,OAAD,CANd;;AAQA,QAAMO,QAAQ,GAAG,MAAM;AACrBJ,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD,GAFD;;AAIA,QAAMK,cAAc,GAAG,MAAM;AAC3BH,IAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACAE,IAAAA,QAAQ;AACT,GAHD;;AAKA,QAAME,cAAc,GAAG,MAAM;AAC3B,QAAIL,oBAAJ,EAA0B;AACxBE,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF,GAJD;;AAMA,sBACE,oBAAC,KAAD;AACE,IAAA,eAAe,EAAE,IADnB;AAEE,IAAA,KAAK,EAAER,MAAM,CAACY,KAFhB;AAGE,IAAA,SAAS,EAAER,iBAHb;AAIE,IAAA,eAAe,EAAE,GAJnB;AAKE,IAAA,iBAAiB,EAAEK,QALrB;AAME,IAAA,eAAe,EAAEA,QANnB;AAOE,IAAA,WAAW,EAAEE;AAPf,kBAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACa;AAApB,kBACE,oBAAC,IAAD,OADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEH;AAAjB,IAFF,eAGE,oBAAC,cAAD,OAHF,CARF,CADF;AAgBD;;AAED,eAAeP,UAAf","sourcesContent":["import React, {useContext} from 'react';\nimport {View} from 'react-native';\nimport Modal from 'react-native-modal';\nimport Button from './Button';\nimport TermsOfService from './TermsOfService';\nimport styles from './styles';\nimport Logo from './Logo';\nimport {Context} from '../../core/Context';\n\nfunction ModalLogin(): JSX.Element {\n  const {\n    permissionVisible,\n    setPermissionVisible,\n    permissionIsContinue,\n    setPermissionIsContinue,\n    setLoginVisible\n  } = useContext(Context);\n\n  const hideSelf = () => {\n    setPermissionVisible(false);\n  };\n\n  const handleContinue = () => {\n    setPermissionIsContinue(true);\n    hideSelf();\n  };\n\n  const handleWillHide = () => {\n    if (permissionIsContinue) {\n      setLoginVisible(true);\n    }\n  };\n\n  return (\n    <Modal\n      useNativeDriver={true}\n      style={styles.modal}\n      isVisible={permissionVisible}\n      backdropOpacity={0.3}\n      onBackButtonPress={hideSelf}\n      onBackdropPress={hideSelf}\n      onModalHide={handleWillHide}>\n      <View style={styles.container}>\n        <Logo />\n        <Button onPress={handleContinue} />\n        <TermsOfService />\n      </View>\n    </Modal>\n  );\n}\n\nexport default ModalLogin;\n"]}