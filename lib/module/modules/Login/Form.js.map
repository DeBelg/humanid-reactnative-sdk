{"version":3,"sources":["Form.tsx"],"names":["React","useContext","useEffect","Keyboard","TextInput","View","CountryPicker","Button","styles","colors","Context","getCountry","getDialCode","Form","state","phoneNumber","setPhoneNumber","setLoginOTPVisible","setCountryCode","countryCode","loginOTPRequest","loginOTPPayload","success","handleChangeText","text","isNaN","Number","handleCountrySelected","item","iso2","handleSubmit","dismiss","phone","isSubmitEnabled","length","phoneNumberLib","require","phoneUtil","PhoneNumberUtil","getInstance","currentCountry","phoneInfo","parse","isValidNumber","containerForm","textInput","white"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,IAA7B,QAAwC,cAAxC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AAEA,SAAQC,UAAR,EAAoBC,WAApB,QAAsC,eAAtC;;AAEA,SAASC,IAAT,GAAgB;AACd,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,WAFI;AAGJC,IAAAA,cAHI;AAIJC,IAAAA,kBAJI;AAKJC,IAAAA,cALI;AAMJC,IAAAA,WANI;AAOJC,IAAAA;AAPI,MAQFnB,UAAU,CAACS,OAAD,CARd;AAUAR,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,iCAAIY,KAAK,CAACO,eAAV,kDAAI,sBAAuBC,OAA3B,EAAoC;AAClCL,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,KAHa,CAId;;AACD,GALQ,EAKN,CAACH,KAAK,CAACO,eAAP,CALM,CAAT;;AAOA,QAAME,gBAAgB,GAAIC,IAAD,IAAkB;AACzC,QAAIC,KAAK,CAACC,MAAM,CAACF,IAAD,CAAP,CAAT,EAAyB;AACvB;AACD;;AAEDR,IAAAA,cAAc,CAACQ,IAAD,CAAd;AACD,GAND;;AAQA,QAAMG,qBAAqB,GAAIC,IAAD,IAAmB;AAC/CV,IAAAA,cAAc,CAACU,IAAI,CAACC,IAAN,CAAd;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzB3B,IAAAA,QAAQ,CAAC4B,OAAT;AAEAX,IAAAA,eAAe,CAAC;AACdY,MAAAA,KAAK,EAAEjB,WADO;AAEdI,MAAAA,WAAW,EAAEP,WAAW,CAACO,WAAD;AAFV,KAAD,CAAf;AAID,GAPD;;AASA,QAAMc,eAAe,GAAG,MAAe;AACrC,QAAIlB,WAAW,CAACmB,MAAZ,IAAsB,CAA1B,EAA6B;AAC3B,YAAMC,cAAc,GAAGC,OAAO,CAAC,uBAAD,CAA9B;;AACA,YAAMC,SAAS,GAAGF,cAAc,CAACG,eAAf,CAA+BC,WAA/B,EAAlB;AAEA,YAAMC,cAAc,GAAG7B,UAAU,CAACQ,WAAD,CAAjC;AACA,YAAMU,IAAI,GAAGW,cAAH,aAAGA,cAAH,uBAAGA,cAAc,CAAEX,IAA7B;AAEA,YAAMY,SAAS,GAAGJ,SAAS,CAACK,KAAV,CAAgB3B,WAAhB,EAA6Bc,IAA7B,CAAlB;AAEA,aAAOQ,SAAS,CAACM,aAAV,CAAwBF,SAAxB,CAAP;AACD;;AAED,WAAO,KAAP;AACD,GAdD;;AAgBA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjC,MAAM,CAACoC;AAApB,kBACE,oBAAC,aAAD;AAAe,IAAA,UAAU,EAAEjB;AAA3B,IADF,eAEE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEnB,MAAM,CAACqC,SADhB;AAEE,IAAA,YAAY,EAAC,WAFf;AAGE,IAAA,YAAY,EAAEtB,gBAHhB;AAIE,IAAA,KAAK,EAAER,WAJT;AAKE,IAAA,WAAW,EAAC,cALd;AAME,IAAA,oBAAoB,EAAEN,MAAM,CAACqC,KAN/B;AAOE,IAAA,SAAS,EAAE;AAPb,IAFF,eAWE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEb,eAAe,EAAhC;AAAoC,IAAA,OAAO,EAAEH;AAA7C,IAXF,CADF;AAeD;;AAED,eAAejB,IAAf","sourcesContent":["import React, {useContext, useEffect} from 'react';\nimport {Keyboard, TextInput, View} from 'react-native';\nimport CountryPicker from './CountryPicker';\nimport Button from './Button';\nimport styles from './styles';\nimport {colors} from '../../themes';\nimport {Context} from '../../core/Context';\nimport {Country} from './Login.interface';\nimport {getCountry, getDialCode} from '../../helpers';\n\nfunction Form() {\n  const {\n    state,\n    phoneNumber,\n    setPhoneNumber,\n    setLoginOTPVisible,\n    setCountryCode,\n    countryCode,\n    loginOTPRequest\n  } = useContext(Context);\n\n  useEffect(() => {\n    if (state.loginOTPPayload?.success) {\n      setLoginOTPVisible(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.loginOTPPayload]);\n\n  const handleChangeText = (text: string) => {\n    if (isNaN(Number(text))) {\n      return;\n    }\n\n    setPhoneNumber(text);\n  };\n\n  const handleCountrySelected = (item: Country) => {\n    setCountryCode(item.iso2);\n  };\n\n  const handleSubmit = () => {\n    Keyboard.dismiss();\n\n    loginOTPRequest({\n      phone: phoneNumber,\n      countryCode: getDialCode(countryCode)\n    });\n  };\n\n  const isSubmitEnabled = (): boolean => {\n    if (phoneNumber.length >= 9) {\n      const phoneNumberLib = require('google-libphonenumber');\n      const phoneUtil = phoneNumberLib.PhoneNumberUtil.getInstance();\n\n      const currentCountry = getCountry(countryCode);\n      const iso2 = currentCountry?.iso2;\n\n      const phoneInfo = phoneUtil.parse(phoneNumber, iso2);\n\n      return phoneUtil.isValidNumber(phoneInfo);\n    }\n\n    return false;\n  };\n\n  return (\n    <View style={styles.containerForm}>\n      <CountryPicker onSelected={handleCountrySelected} />\n      <TextInput\n        style={styles.textInput}\n        keyboardType=\"phone-pad\"\n        onChangeText={handleChangeText}\n        value={phoneNumber}\n        placeholder=\"Phone Number\"\n        placeholderTextColor={colors.white}\n        maxLength={15}\n      />\n      <Button enabled={isSubmitEnabled()} onPress={handleSubmit} />\n    </View>\n  );\n}\n\nexport default Form;\n"]}