{"version":3,"sources":["index.tsx"],"names":["React","useContext","View","Text","ScrollView","Modal","OTP","Illustration","Description","TermsDescription","styles","colors","Form","Context","EventRegister","ON_CANCEL","Login","loginVisible","setLoginVisible","clearState","resetReducer","hideSelf","handleOnCancel","emitEvent","primary","modal","container","content","btnCancel"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,UAApB,QAAqC,cAArC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,aAAR,EAAuBC,SAAvB,QAAuC,yBAAvC;;AAEA,SAASC,KAAT,GAA8B;AAC5B,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA;AAJI,MAKFnB,UAAU,CAACY,OAAD,CALd;;AAOA,QAAMQ,QAAQ,GAAG,MAAM;AACrBH,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFD;;AAIA,QAAMI,cAAc,GAAG,MAAM;AAC3BR,IAAAA,aAAa,CAACS,SAAd,CAAwBR,SAAxB,EAAmC,IAAnC;AACAK,IAAAA,YAAY;AACZD,IAAAA,UAAU;AACX,GAJD;;AAMA,sBACE,uDACE,oBAAC,KAAD;AACE,IAAA,eAAe,EAAE,IADnB;AAEE,IAAA,iBAAiB,EAAE,GAFrB;AAGE,IAAA,YAAY,EAAC,SAHf;AAIE,IAAA,kBAAkB,EAAE,GAJtB;AAKE,IAAA,SAAS,EAAEF,YALb;AAME,IAAA,iBAAiB,EAAEI,QANrB;AAOE,IAAA,eAAe,EAAE,CAPnB;AAQE,IAAA,aAAa,EAAEV,MAAM,CAACa,OARxB;AASE,IAAA,KAAK,EAAEd,MAAM,CAACe,KAThB;AAUE,IAAA,WAAW,EAAE;AAVf,kBAWE,oBAAC,UAAD;AAAY,IAAA,4BAA4B,EAAE;AAA1C,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACgB;AAApB,kBACE,oBAAC,YAAD,OADF,eAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACiB;AAApB,kBACE,oBAAC,WAAD,OADF,eAEE,oBAAC,IAAD,OAFF,eAGE,oBAAC,gBAAD,OAHF,eAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjB,MAAM,CAACkB,SAApB;AAA+B,IAAA,OAAO,EAAEN;AAAxC,cAJF,CAFF,CADF,CAXF,eAwBE,oBAAC,GAAD,OAxBF,CADF,CADF;AA8BD;;AAED,eAAeN,KAAf","sourcesContent":["import React, {useContext} from 'react';\nimport {View, Text, ScrollView} from 'react-native';\nimport Modal from 'react-native-modal';\nimport OTP from '../OTP';\nimport Illustration from './Illustration';\nimport Description from './Description';\nimport TermsDescription from './TermsDescription';\nimport styles from './styles';\nimport {colors} from '../../themes';\nimport Form from './Form';\nimport {Context} from '../../core/Context';\nimport {EventRegister, ON_CANCEL} from '../../core/eventManager';\n\nfunction Login(): JSX.Element {\n  const {\n    loginVisible,\n    setLoginVisible,\n    clearState,\n    resetReducer\n  } = useContext(Context);\n\n  const hideSelf = () => {\n    setLoginVisible(false);\n  };\n\n  const handleOnCancel = () => {\n    EventRegister.emitEvent(ON_CANCEL, true);\n    resetReducer();\n    clearState();\n  };\n\n  return (\n    <>\n      <Modal\n        useNativeDriver={true}\n        animationInTiming={500}\n        animationOut=\"fadeOut\"\n        animationOutTiming={500}\n        isVisible={loginVisible}\n        onBackButtonPress={hideSelf}\n        backdropOpacity={1}\n        backdropColor={colors.primary}\n        style={styles.modal}\n        coverScreen={true}>\n        <ScrollView showsVerticalScrollIndicator={false}>\n          <View style={styles.container}>\n            <Illustration />\n            <View style={styles.content}>\n              <Description />\n              <Form />\n              <TermsDescription />\n              <Text style={styles.btnCancel} onPress={handleOnCancel}>\n                Cancel\n              </Text>\n            </View>\n          </View>\n        </ScrollView>\n        <OTP />\n      </Modal>\n    </>\n  );\n}\n\nexport default Login;\n"]}