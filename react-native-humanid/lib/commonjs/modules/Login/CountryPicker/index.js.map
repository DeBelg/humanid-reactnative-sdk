{"version":3,"sources":["index.tsx"],"names":["countries","require","arrCountry","Object","keys","map","key","Index","props","onSelected","onCountryPickerShow","countryCode","Context","visible","setVisible","React","useState","setCountries","resetCountries","toggleModal","handleOnSelected","useCallback","item","handleOnCountryChange","country","length","filterCountries","filter","filtered","name","includes","keyExtractor","renderItem","imageSource","flags","iso2","styles","itemFlag","iconFlag","countryText","countryCodeText","dialCode","containerInputCountryCode","placeholderCountryCode","images","arrowDown","modalCountryPicker","FlatListSeparator","CountryPickerEmpty","memo"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\nimport {View, Text, Image, TouchableOpacity, FlatList} from 'react-native';\nimport Modal from 'react-native-modal';\nimport {flags, images} from '../../../themes';\nimport SearchCountryInput from './SearchCountryInput';\nimport FlatListSeparator from './FlatListSeparator';\nimport CountryPickerEmpty from './CountryPickerEmpty';\nimport {\n  Countries,\n  Country,\n  CountryPickerProps,\n  FlagType\n} from '../Login.interface';\nimport styles from '../styles';\nimport {Context} from '../../../core/Context';\nimport {getDialCode} from '../../../helpers';\n\nconst countries: Countries = require('../../../../assets/json/countries.json');\n\nconst arrCountry = Object.keys(countries).map((key) => {\n  return countries[key as FlagType];\n});\n\nfunction Index(props: CountryPickerProps) {\n  const {onSelected, onCountryPickerShow} = props;\n\n  const {countryCode} = useContext(Context);\n  const [visible, setVisible] = React.useState(false);\n  const [countries, setCountries] = React.useState(arrCountry);\n\n  const resetCountries = () => {\n    setCountries(arrCountry);\n  };\n\n  const toggleModal = () => {\n    setVisible(!visible);\n  };\n\n  // @ts-ignore\n  const handleOnSelected = React.useCallback((item: Country) => {\n      toggleModal();\n      onSelected(item);\n  });\n\n  const handleOnCountryChange = React.useCallback((country: string) => {\n    if (!country.length) {\n      setCountries(arrCountry);\n    } else {\n      const filterCountries = countries.filter(\n        (filtered) => filtered.name.includes(country)\n      );\n\n      setCountries(filterCountries);\n    }\n  }, [])\n\n  const keyExtractor = (item: Country) => item.name;\n\n  const renderItem = ({item}: {item: Country}) => {\n    const imageSource = flags[item.iso2];\n\n    return (\n      <TouchableOpacity\n        activeOpacity={0.3}\n        onPress={() => handleOnSelected(item)}>\n        <View style={styles.itemFlag}>\n          <Image\n            source={imageSource}\n            style={styles.iconFlag}\n            resizeMode=\"contain\"\n          />\n          <Text style={styles.countryText}>{item.name}</Text>\n          <Text style={styles.countryCodeText}>{`+${item.dialCode}`}</Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <>\n      <TouchableOpacity activeOpacity={0.3} onPress={toggleModal}>\n        <View style={styles.containerInputCountryCode}>\n          <Image\n            source={flags[countryCode]}\n            resizeMode=\"contain\"\n            style={styles.iconFlag}\n          />\n          <Text style={styles.placeholderCountryCode}>\n            {`+${getDialCode(countryCode)}`}\n          </Text>\n          <Image source={images.arrowDown} style={styles.arrowDown} />\n        </View>\n      </TouchableOpacity>\n      <Modal\n        useNativeDriver={true}\n        hideModalContentWhileAnimating={true}\n        isVisible={visible}\n        coverScreen={true}\n        style={styles.modalCountryPicker}\n        onModalHide={resetCountries}\n        onModalShow={onCountryPickerShow}\n        onBackButtonPress={toggleModal}\n      >\n        <View>\n          <SearchCountryInput\n            onChangeText={handleOnCountryChange}\n            onCancel={toggleModal}\n          />\n            <FlatList\n              keyExtractor={keyExtractor}\n              data={countries}\n              renderItem={renderItem}\n              scrollEnabled={true}\n              showsVerticalScrollIndicator={false}\n              maxToRenderPerBatch={15}\n              ItemSeparatorComponent={FlatListSeparator}\n              ListEmptyComponent={CountryPickerEmpty}\n              keyboardShouldPersistTaps=\"handled\"\n            />\n        </View>\n      </Modal>\n    </>\n  );\n}\n\nexport default React.memo(Index);\n"]}