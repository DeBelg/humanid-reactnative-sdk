{"version":3,"sources":["xhr.ts"],"names":["baseURL","xhr","url","params","xhrOptions","method","headers","options","clientSecret","clientId","body","JSON","stringify","response","fetch","parsedBody","json","ok","message","code"],"mappings":";;;;;;;AAAA;;;;AAGA,MAAMA,OAAO,GAAG,yCAAhB;;AAEe,eAAeC,GAAf,CACbC,GADa,EAEbC,MAFa,EAGgB;AAC7BD,EAAAA,GAAG,GAAGF,OAAO,GAAGE,GAAhB;AACA,QAAME,UAAU,GAAG;AACjBC,IAAAA,MAAM,EAAE,MADS;AAEjBC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiBC,iBAAQC,YAFlB;AAGP,mBAAaD,iBAAQE;AAHd,KAFQ;AAOjBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,MAAf;AAPW,GAAnB;AAUA,QAAMU,QAAyB,GAAG,MAAMC,KAAK,CAACZ,GAAD,EAAME,UAAN,CAA7C;;AAEA,MAAI;AACFS,IAAAA,QAAQ,CAACE,UAAT,GAAsB,MAAMF,QAAQ,CAACG,IAAT,EAA5B;AACD,GAFD,CAEE,MAAM,CAAE;;AAEV,MAAI,CAACH,QAAQ,CAACI,EAAV,IAAgBJ,QAAQ,CAACE,UAA7B,EAAyC;AACvC,UAAO;AACLG,MAAAA,OAAO,EAAEL,QAAQ,CAACE,UAAT,CAAoBG,OADxB;AAELC,MAAAA,IAAI,EAAEN,QAAQ,CAACE,UAAT,CAAoBI;AAFrB,KAAP;AAID;;AAED,SAAON,QAAQ,CAACE,UAAhB;AACD","sourcesContent":["import options from '../core/options';\nimport {HttpResponse, NetworkResponse} from './network.interface';\n\nconst baseURL = 'https://core.human-id.org/v0.0.3/mobile';\n\nexport default async function xhr<T, R>(\n  url: string,\n  params: T\n): Promise<NetworkResponse<R>> {\n  url = baseURL + url;\n  const xhrOptions = {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      'client-secret': options.clientSecret,\n      'client-id': options.clientId\n    },\n    body: JSON.stringify(params)\n  };\n\n  const response: HttpResponse<R> = await fetch(url, xhrOptions);\n\n  try {\n    response.parsedBody = await response.json();\n  } catch {}\n\n  if (!response.ok && response.parsedBody) {\n    throw ({\n      message: response.parsedBody.message,\n      code: response.parsedBody.code\n    });\n  }\n\n  return response.parsedBody!;\n}\n"]}